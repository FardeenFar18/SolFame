{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/mahal-booking/src/components/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\"); // To store error message\n  const [loading, setLoading] = useState(false); // To manage loading state\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    // Reset error and loading state\n    setError(\"\");\n    setLoading(true);\n\n    // Validate input fields\n    if (!email || !password) {\n      setError(\"Please fill in all fields\");\n      setLoading(false);\n      return;\n    }\n    try {\n      // Make an API call to your backend server for login (using localhost)\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n\n      // Check if the response is successful\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Login successful\", data);\n\n        // Set sessionStorage items for username and email\n        sessionStorage.setItem(\"username\", data.username); // Assuming API returns 'username'\n        sessionStorage.setItem(\"email\", data.email); // Store email\n\n        // Redirect after successful login\n        window.location.href = \"/dashboard\"; // Modify this to your desired page\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Login failed, please try again\");\n      }\n    } catch (error) {\n      setError(\"An error occurred while logging in. Please try again.\");\n      console.error(error);\n    } finally {\n      setLoading(false); // Reset loading state after API call\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter your password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"yCbXNlOJJPJVRLyAaaIx7/HBJhw=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","sessionStorage","setItem","username","window","location","href","errorData","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/home/ubuntu/mahal-booking/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\n\nconst LoginPage = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\"); // To store error message\n  const [loading, setLoading] = useState(false); // To manage loading state\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    // Reset error and loading state\n    setError(\"\");\n    setLoading(true);\n\n    // Validate input fields\n    if (!email || !password) {\n      setError(\"Please fill in all fields\");\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Make an API call to your backend server for login (using localhost)\n      const response = await fetch(\"http://localhost:5000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      // Check if the response is successful\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Login successful\", data);\n\n        // Set sessionStorage items for username and email\n        sessionStorage.setItem(\"username\", data.username); // Assuming API returns 'username'\n        sessionStorage.setItem(\"email\", data.email); // Store email\n\n        // Redirect after successful login\n        window.location.href = \"/dashboard\"; // Modify this to your desired page\n      } else {\n        const errorData = await response.json();\n        setError(errorData.message || \"Login failed, please try again\");\n      }\n    } catch (error) {\n      setError(\"An error occurred while logging in. Please try again.\");\n      console.error(error);\n    } finally {\n      setLoading(false); // Reset loading state after API call\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <form onSubmit={handleLogin} className=\"auth-form\">\n        <h2>Login</h2>\n\n        {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n\n        <label>Email:</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Enter your email\"\n          required\n        />\n\n        <label>Password:</label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder=\"Enter your password\"\n          required\n        />\n\n        <button type=\"submit\" disabled={loading}>\n          {loading ? \"Logging in...\" : \"Login\"}\n        </button>\n\n        <p>\n          Don't have an account? <a href=\"/signup\">Sign up</a>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}