{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Git0401/SolFame/frontend/src/components/OwnerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OwnerDashboard = () => {\n  _s();\n  // Renamed to uppercase 'OwnerDashboard'\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [slots, setSlots] = useState([]);\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [available, setAvailable] = useState(true);\n\n  // Fetch existing slots when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/slots').then(response => setSlots(response.data)).catch(error => console.error('Error fetching slots:', error));\n  }, []);\n\n  // Handle image upload\n  const handleImageChange = e => {\n    setImage(e.target.files[0]);\n  };\n  const handleImageUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('mahalImage', image);\n    try {\n      const response = await axios.post('http://localhost:5000/api/mahal-images', formData);\n      setImageUrl(response.data.imageUrl);\n      alert('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error uploading image');\n    }\n  };\n\n  // Handle slot creation\n  const handleAddSlot = async e => {\n    e.preventDefault();\n    const newSlot = {\n      date,\n      time,\n      available\n    };\n    try {\n      await axios.post('http://localhost:5000/api/slots', newSlot);\n      alert('Slot added successfully');\n      setSlots([...slots, newSlot]); // Update slots in state\n    } catch (error) {\n      console.error('Error adding slot:', error);\n      alert('Error adding slot');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Marriage Mahal Owner Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Mahal Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleImageUpload,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000${imageUrl}`,\n        alt: \"Mahal\",\n        width: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAddSlot,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: time,\n          onChange: e => setTime(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Available:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: available,\n            onChange: e => setAvailable(e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Slots\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [new Date(slot.date).toLocaleDateString(), \" \", slot.time, \" - \", slot.available ? 'Available' : 'Not Available']\n        }, slot._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(OwnerDashboard, \"NKs1EhQQ3fsLoKjMnV2Iwht7/S4=\");\n_c = OwnerDashboard;\nexport default OwnerDashboard; // Export the updated component\nvar _c;\n$RefreshReg$(_c, \"OwnerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","OwnerDashboard","_s","image","setImage","imageUrl","setImageUrl","slots","setSlots","date","setDate","time","setTime","available","setAvailable","get","then","response","data","catch","error","console","handleImageChange","e","target","files","handleImageUpload","preventDefault","formData","FormData","append","post","alert","handleAddSlot","newSlot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","src","alt","width","value","checked","map","slot","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["/home/ubuntu/Git0401/SolFame/frontend/src/components/OwnerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst OwnerDashboard = () => { // Renamed to uppercase 'OwnerDashboard'\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [slots, setSlots] = useState([]);\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [available, setAvailable] = useState(true);\n\n  // Fetch existing slots when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/slots')\n      .then(response => setSlots(response.data))\n      .catch(error => console.error('Error fetching slots:', error));\n  }, []);\n\n  // Handle image upload\n  const handleImageChange = (e) => {\n    setImage(e.target.files[0]);\n  };\n\n  const handleImageUpload = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('mahalImage', image);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/mahal-images', formData);\n      setImageUrl(response.data.imageUrl);\n      alert('Image uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Error uploading image');\n    }\n  };\n\n  // Handle slot creation\n  const handleAddSlot = async (e) => {\n    e.preventDefault();\n    const newSlot = { date, time, available };\n\n    try {\n      await axios.post('http://localhost:5000/api/slots', newSlot);\n      alert('Slot added successfully');\n      setSlots([...slots, newSlot]); // Update slots in state\n    } catch (error) {\n      console.error('Error adding slot:', error);\n      alert('Error adding slot');\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Marriage Mahal Owner Dashboard</h1>\n\n      {/* Mahal Image Upload */}\n      <div className=\"section\">\n        <h2>Upload Mahal Image</h2>\n        <form onSubmit={handleImageUpload}>\n          <input type=\"file\" onChange={handleImageChange} required />\n          <button type=\"submit\">Upload Image</button>\n        </form>\n        {imageUrl && <img src={`http://localhost:5000${imageUrl}`} alt=\"Mahal\" width=\"300\" />}\n      </div>\n\n      {/* Slot Management */}\n      <div className=\"section\">\n        <h2>Manage Slots</h2>\n        <form onSubmit={handleAddSlot}>\n          <input\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          />\n          <input\n            type=\"time\"\n            value={time}\n            onChange={(e) => setTime(e.target.value)}\n            required\n          />\n          <label>\n            Available:\n            <input\n              type=\"checkbox\"\n              checked={available}\n              onChange={(e) => setAvailable(e.target.checked)}\n            />\n          </label>\n          <button type=\"submit\">Add Slot</button>\n        </form>\n\n        <h3>Available Slots</h3>\n        <ul>\n          {slots.map((slot) => (\n            <li key={slot._id}>\n              {new Date(slot.date).toLocaleDateString()} {slot.time} - {slot.available ? 'Available' : 'Not Available'}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default OwnerDashboard; // Export the updated component\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}