{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/mahal-booking/frontend/src/components/SignupPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SignupForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    password: '',\n    otp: ''\n  });\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [modalMessage, setModalMessage] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  // Handle form input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.otp === generatedOtp) {\n      try {\n        const response = await axios.post('http://localhost:5001/auth/signup', formData);\n        setModalMessage('Signup successful!');\n        setIsModalVisible(true);\n        Navigate('/login');\n      } catch (err) {\n        setModalMessage(err.response ? err.response.data.message : 'Error occurred during signup.');\n        setIsModalVisible(true);\n      }\n    } else {\n      setModalMessage('Invalid OTP!');\n      setIsModalVisible(true);\n    }\n  };\n\n  // Handle OTP generation and sending\n  const sendOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/auth/sendOtp', {\n        email: formData.email\n      });\n      setGeneratedOtp(response.data.otp); // Store the OTP sent from the backend\n      setIsOtpSent(true);\n      setError(''); // Reset error after sending OTP\n    } catch (err) {\n      setModalMessage(err.response ? err.response.data.message : 'Error sending OTP.');\n      setIsModalVisible(true);\n    }\n  };\n  const closeModal = () => {\n    setIsModalVisible(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email Address\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        placeholder: \"Phone Number\",\n        value: formData.phone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: formData.address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), isOtpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"otp\",\n          placeholder: \"Enter OTP\",\n          value: formData.otp,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Verify OTP and Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: sendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), isModalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      message: modalMessage,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SignupForm, \"2zBQmXd+fNjmv5w8TBACVkXpHP4=\");\n_c = SignupForm;\nexport default SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","SignupForm","_s","formData","setFormData","name","email","phone","address","password","otp","isOtpSent","setIsOtpSent","error","setError","generatedOtp","setGeneratedOtp","modalMessage","setModalMessage","isModalVisible","setIsModalVisible","handleChange","e","target","value","handleSubmit","preventDefault","response","post","Navigate","err","data","message","sendOtp","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/ubuntu/mahal-booking/frontend/src/components/SignupPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal'\n\nconst SignupForm = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    password: '',\n    otp: '',\n  });\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [error, setError] = useState('');\n  const [generatedOtp, setGeneratedOtp] = useState('');\n  const [modalMessage, setModalMessage] = useState('');\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (formData.otp === generatedOtp) {\n      try {\n        const response = await axios.post('http://localhost:5001/auth/signup', formData);\n        setModalMessage('Signup successful!');\n        setIsModalVisible(true);\n        Navigate('/login')\n      } catch (err) {\n        setModalMessage(err.response ? err.response.data.message : 'Error occurred during signup.');\n        setIsModalVisible(true);\n      }\n    } else {\n      setModalMessage('Invalid OTP!');\n      setIsModalVisible(true);\n    }\n  };\n\n  // Handle OTP generation and sending\n  const sendOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5001/auth/sendOtp', { email: formData.email });\n      setGeneratedOtp(response.data.otp);  // Store the OTP sent from the backend\n      setIsOtpSent(true);\n      setError(''); // Reset error after sending OTP\n    } catch (err) {\n      setModalMessage(err.response ? err.response.data.message : 'Error sending OTP.');\n      setIsModalVisible(true);\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalVisible(false);\n  };\n\n  return (\n    <div>\n      <h2>Sign Up</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Full Name\"\n          value={formData.name}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email Address\"\n          value={formData.email}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"tel\"\n          name=\"phone\"\n          placeholder=\"Phone Number\"\n          value={formData.phone}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"text\"\n          name=\"address\"\n          placeholder=\"Address\"\n          value={formData.address}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n        {isOtpSent ? (\n          <>\n            <input\n              type=\"text\"\n              name=\"otp\"\n              placeholder=\"Enter OTP\"\n              value={formData.otp}\n              onChange={handleChange}\n              required\n            />\n            <button type=\"submit\">Verify OTP and Sign Up</button>\n          </>\n        ) : (\n          <button type=\"button\" onClick={sendOtp}>\n            Send OTP\n          </button>\n        )}\n      </form>\n\n      {isModalVisible && <Modal message={modalMessage} onClose={closeModal} />}\n    </div>\n  );\n};\n\nexport default SignupForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}