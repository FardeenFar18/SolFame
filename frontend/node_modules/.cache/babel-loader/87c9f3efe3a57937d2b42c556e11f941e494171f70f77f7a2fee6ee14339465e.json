{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/git01/SolFame/frontend/src/components/OTP-Verify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Navigate hook for routing\n\n  // Send OTP to the user's email or phone number\n  const handleSendOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/send-otp', {\n        email // You can also send mobile number if needed\n      });\n      Swal.fire({\n        icon: 'success',\n        title: 'OTP Sent',\n        text: 'An OTP has been sent to your email/phone.'\n      });\n      setIsOtpSent(true); // Set the state that OTP is sent\n      setMessage(response.data.message);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Send OTP',\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error sending OTP'\n      });\n    }\n  };\n\n  // Verify OTP and finalize signup\n  const handleVerifyOtpAndSignup = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/verify-otp', {\n        email,\n        otp\n      });\n      if (response.data.success) {\n        // Proceed to signup if OTP is verified\n        await handleFinalSignup();\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'OTP Verification Failed',\n        text: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Invalid OTP'\n      });\n    }\n  };\n\n  // Finalize signup after OTP is verified\n  const handleFinalSignup = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/signup', {\n        name,\n        email,\n        password,\n        confirmPassword,\n        address,\n        mobileNumber\n      });\n      Swal.fire({\n        icon: 'success',\n        title: 'Signup Successful',\n        text: response.data.message\n      });\n      navigate('/login'); // Redirect to login or home after successful signup\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      Swal.fire({\n        icon: 'error',\n        title: 'Signup Failed',\n        text: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Error during signup'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your full name\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Enter your email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter your password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm your password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your address\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your mobile number\",\n        value: mobileNumber,\n        onChange: e => setMobileNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), !isOtpSent ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter OTP\",\n          value: otp,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVerifyOtpAndSignup,\n          children: \"Verify OTP and Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"XfRYi20+EG9An+oHnz0o2+MFHVE=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","jsxDEV","_jsxDEV","Signup","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","address","setAddress","mobileNumber","setMobileNumber","otp","setOtp","isOtpSent","setIsOtpSent","message","setMessage","navigate","handleSendOtp","response","post","fire","icon","title","text","data","error","_error$response","_error$response$data","handleVerifyOtpAndSignup","success","handleFinalSignup","_error$response2","_error$response2$data","_error$response3","_error$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/git01/SolFame/frontend/src/components/OTP-Verify.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom';\n\nconst Signup = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [address, setAddress] = useState('');\n  const [mobileNumber, setMobileNumber] = useState('');\n  const [otp, setOtp] = useState('');\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const [message, setMessage] = useState('');\n  \n  const navigate = useNavigate(); // Navigate hook for routing\n\n  // Send OTP to the user's email or phone number\n  const handleSendOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/send-otp', {\n        email, // You can also send mobile number if needed\n      });\n      Swal.fire({\n        icon: 'success',\n        title: 'OTP Sent',\n        text: 'An OTP has been sent to your email/phone.',\n      });\n      setIsOtpSent(true); // Set the state that OTP is sent\n      setMessage(response.data.message);\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Failed to Send OTP',\n        text: error.response?.data?.message || 'Error sending OTP',\n      });\n    }\n  };\n\n  // Verify OTP and finalize signup\n  const handleVerifyOtpAndSignup = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/verify-otp', {\n        email,\n        otp,\n      });\n      if (response.data.success) {\n        // Proceed to signup if OTP is verified\n        await handleFinalSignup();\n      }\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'OTP Verification Failed',\n        text: error.response?.data?.message || 'Invalid OTP',\n      });\n    }\n  };\n\n  // Finalize signup after OTP is verified\n  const handleFinalSignup = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/signup', {\n        name,\n        email,\n        password,\n        confirmPassword,\n        address,\n        mobileNumber,\n      });\n      Swal.fire({\n        icon: 'success',\n        title: 'Signup Successful',\n        text: response.data.message,\n      });\n      navigate('/login'); // Redirect to login or home after successful signup\n    } catch (error) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Signup Failed',\n        text: error.response?.data?.message || 'Error during signup',\n      });\n    }\n  };\n\n  return (\n    <div className='signup-form'>\n      <h2>Signup</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Enter your full name\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Enter your email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Enter your password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Confirm your password\"\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Enter your address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Enter your mobile number\"\n          value={mobileNumber}\n          onChange={(e) => setMobileNumber(e.target.value)}\n        />\n        {!isOtpSent ? (\n          <button onClick={handleSendOtp}>Send OTP</button>\n        ) : (\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Enter OTP\"\n              value={otp}\n              onChange={(e) => setOtp(e.target.value)}\n            />\n            <button onClick={handleVerifyOtpAndSignup}>Verify OTP and Signup</button>\n          </div>\n        )}\n      </div>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}