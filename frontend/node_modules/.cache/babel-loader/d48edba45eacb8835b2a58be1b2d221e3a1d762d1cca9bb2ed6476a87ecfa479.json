{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Git_0201/SolFame/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n// Custom input component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  field,\n  form,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), form.touched[field.name] && form.errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: form.errors[field.name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = InputField;\nconst Register = () => {\n  _s();\n  const [upload, setUpload] = useState(null); // State for uploaded file\n\n  // Initial form values (now only Marriage Mahal details)\n  const initialValues = {\n    mahalName: '',\n    mahalLocation: '',\n    mahalCapacity: '',\n    profilePicture: null // Optional: Still allowing file upload if needed\n  };\n\n  // Marriage Mahal details validation\n  const validationSchema = Yup.object({\n    mahalName: Yup.string().required('Marriage Mahal Name is required'),\n    mahalLocation: Yup.string().required('Marriage Mahal Location is required'),\n    mahalCapacity: Yup.number().positive('Capacity must be a positive number').required('Capacity is required')\n  });\n\n  // Submit handler\n  const handleSubmit = async (values, {\n    setSubmitting,\n    setStatus\n  }) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/owners/register', values);\n      setStatus({\n        success: 'Registration successful. You can now log in!'\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Registration failed. Please try again.';\n      setStatus({\n        error: message\n      });\n    }\n    setSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Marriage Mahal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        values,\n        setFieldValue,\n        isSubmitting,\n        status\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [(status === null || status === void 0 ? void 0 : status.error) && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: status.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this), (status === null || status === void 0 ? void 0 : status.success) && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: status.success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Marriage Mahal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"mahalName\",\n            type: \"text\",\n            placeholder: \"Marriage Mahal Name\",\n            component: InputField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"mahalLocation\",\n            type: \"text\",\n            placeholder: \"Marriage Mahal Location\",\n            component: InputField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"mahalCapacity\",\n            type: \"number\",\n            placeholder: \"Marriage Mahal Capacity\",\n            component: InputField\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: e => setUpload(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), upload && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File selected: \", upload.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"T30ulb7riH/JzRJQelaFhrmA8qc=\");\n_c2 = Register;\nexport default Register;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","ErrorMessage","Yup","axios","jsxDEV","_jsxDEV","InputField","field","form","props","children","fileName","_jsxFileName","lineNumber","columnNumber","touched","name","errors","style","color","_c","Register","_s","upload","setUpload","initialValues","mahalName","mahalLocation","mahalCapacity","profilePicture","validationSchema","object","string","required","number","positive","handleSubmit","values","setSubmitting","setStatus","response","post","success","error","_error$response","_error$response$data","message","data","onSubmit","setFieldValue","isSubmitting","status","type","placeholder","component","onChange","e","target","files","disabled","_c2","$RefreshReg$"],"sources":["/home/ubuntu/Git_0201/SolFame/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n// Custom input component\nconst InputField = ({ field, form, ...props }) => {\n  return (\n    <div>\n      <input {...field} {...props} />\n      {form.touched[field.name] && form.errors[field.name] && (\n        <div style={{ color: 'red' }}>{form.errors[field.name]}</div>\n      )}\n    </div>\n  );\n};\n\nconst Register = () => {\n  const [upload, setUpload] = useState(null); // State for uploaded file\n\n  // Initial form values (now only Marriage Mahal details)\n  const initialValues = {\n    mahalName: '',\n    mahalLocation: '',\n    mahalCapacity: '',\n    profilePicture: null, // Optional: Still allowing file upload if needed\n  };\n\n  // Marriage Mahal details validation\n  const validationSchema = Yup.object({\n    mahalName: Yup.string().required('Marriage Mahal Name is required'),\n    mahalLocation: Yup.string().required('Marriage Mahal Location is required'),\n    mahalCapacity: Yup.number()\n      .positive('Capacity must be a positive number')\n      .required('Capacity is required'),\n  });\n\n  // Submit handler\n  const handleSubmit = async (values, { setSubmitting, setStatus }) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/owners/register', values);\n      setStatus({ success: 'Registration successful. You can now log in!' });\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed. Please try again.';\n      setStatus({ error: message });\n    }\n    setSubmitting(false);\n  };\n\n  return (\n    <div>\n      <h2>Register Marriage Mahal</h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ values, setFieldValue, isSubmitting, status }) => (\n          <Form>\n            {status?.error && <p style={{ color: 'red' }}>{status.error}</p>}\n            {status?.success && <p style={{ color: 'green' }}>{status.success}</p>}\n\n            {/* Marriage Mahal Information */}\n            <div>\n              <h3>Marriage Mahal Information</h3>\n              <Field\n                name=\"mahalName\"\n                type=\"text\"\n                placeholder=\"Marriage Mahal Name\"\n                component={InputField}\n              />\n              <Field\n                name=\"mahalLocation\"\n                type=\"text\"\n                placeholder=\"Marriage Mahal Location\"\n                component={InputField}\n              />\n              <Field\n                name=\"mahalCapacity\"\n                type=\"number\"\n                placeholder=\"Marriage Mahal Capacity\"\n                component={InputField}\n              />\n\n              {/* Optional File Upload */}\n              <input\n                type=\"file\"\n                onChange={(e) => setUpload(e.target.files[0])}\n              />\n              {upload && <p>File selected: {upload.name}</p>}\n\n              <button type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}