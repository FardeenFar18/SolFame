{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/git01/SolFame/frontend/src/components/OTP-Verify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyOtp = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate hook for navigation\n\n  const handleVerifyOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/verify-otp', {\n        email,\n        otp\n      });\n      // Show success alert using Swal\n      Swal.fire({\n        icon: 'success',\n        title: 'OTP Verified',\n        text: response.data.message\n      });\n      // Redirect to the login page after successful OTP verification\n      navigate('/login'); // Or navigate to a different page like /dashboard\n    } catch (error) {\n      var _error$response, _error$response$data;\n      // Show error alert using Swal\n      Swal.fire({\n        icon: 'error',\n        title: 'OTP Verification Failed',\n        text: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error during OTP verification'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"OTP has been sent : \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter OTP\",\n      value: otp,\n      onChange: e => setOtp(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleVerifyOtp,\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyOtp, \"yI6E49LD19CBfcdKrC/1AUOTeNY=\", false, function () {\n  return [useNavigate];\n});\n_c = VerifyOtp;\nexport default VerifyOtp;\nvar _c;\n$RefreshReg$(_c, \"VerifyOtp\");","map":{"version":3,"names":["React","useState","axios","Swal","useNavigate","jsxDEV","_jsxDEV","VerifyOtp","_s","email","setEmail","otp","setOtp","message","setMessage","navigate","handleVerifyOtp","response","post","fire","icon","title","text","data","error","_error$response","_error$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/ubuntu/git01/SolFame/frontend/src/components/OTP-Verify.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate for navigation\n\nconst VerifyOtp = () => {\n  const [email, setEmail] = useState('');\n  const [otp, setOtp] = useState('');\n  const [message, setMessage] = useState('');\n  \n  const navigate = useNavigate(); // Initialize useNavigate hook for navigation\n\n  const handleVerifyOtp = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/auth/verify-otp', {\n        email,\n        otp,\n      });\n      // Show success alert using Swal\n      Swal.fire({\n        icon: 'success',\n        title: 'OTP Verified',\n        text: response.data.message,\n      });\n      // Redirect to the login page after successful OTP verification\n      navigate('/login'); // Or navigate to a different page like /dashboard\n    } catch (error) {\n      // Show error alert using Swal\n      Swal.fire({\n        icon: 'error',\n        title: 'OTP Verification Failed',\n        text: error.response?.data?.message || 'Error during OTP verification',\n      });\n    }\n  };\n\n  return (\n    <div className='signup-form'>\n      <h2>Verify OTP</h2>\n      <p>OTP has been sent : {email}</p>\n      <input\n          type=\"text\"\n          placeholder=\"Enter OTP\"\n          value={otp}\n          onChange={(e) => setOtp(e.target.value)}\n        />\n        <button onClick={handleVerifyOtp}>Verify OTP</button>\n \n        </div>\n    \n   \n  );\n};\n\nexport default VerifyOtp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,uCAAuC,EAAE;QACzET,KAAK;QACLE;MACF,CAAC,CAAC;MACF;MACAR,IAAI,CAACgB,IAAI,CAAC;QACRC,IAAI,EAAE,SAAS;QACfC,KAAK,EAAE,cAAc;QACrBC,IAAI,EAAEL,QAAQ,CAACM,IAAI,CAACV;MACtB,CAAC,CAAC;MACF;MACAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOS,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACd;MACAvB,IAAI,CAACgB,IAAI,CAAC;QACRC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,yBAAyB;QAChCC,IAAI,EAAE,EAAAG,eAAA,GAAAD,KAAK,CAACP,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBb,OAAO,KAAI;MACzC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEP,OAAA;IAAKqB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BtB,OAAA;MAAAsB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA;MAAAsB,QAAA,GAAG,sBAAoB,EAACnB,KAAK;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClC1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBC,KAAK,EAAExB,GAAI;MACXyB,QAAQ,EAAGC,CAAC,IAAKzB,MAAM,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAEvB,eAAgB;MAAAY,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEhD,CAAC;AAId,CAAC;AAACxB,EAAA,CA/CID,SAAS;EAAA,QAKIH,WAAW;AAAA;AAAAoC,EAAA,GALxBjC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}