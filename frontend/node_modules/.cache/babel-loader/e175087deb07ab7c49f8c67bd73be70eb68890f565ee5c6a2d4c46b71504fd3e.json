{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/Git_0201/SolFame/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n// Custom input component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  field,\n  form,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), form.touched[field.name] && form.errors[field.name] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: form.errors[field.name]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = InputField;\nconst Register = () => {\n  _s();\n  const [step, setStep] = useState(1);\n\n  // Initial form values\n  const initialValues = {\n    maritalStatus: '',\n    mahalName: '',\n    mahalLocation: '',\n    mahalCapacity: ''\n  };\n\n  // Step 2: Marriage Mahal details validation\n  const validationSchemaStep2 = Yup.object({\n    mahalName: Yup.string().when('maritalStatus', {\n      is: 'married',\n      then: Yup.string().required('Marriage Mahal Name is required')\n    }),\n    mahalLocation: Yup.string().when('maritalStatus', {\n      is: 'married',\n      then: Yup.string().required('Marriage Mahal Location is required')\n    }),\n    mahalCapacity: Yup.number().when('maritalStatus', {\n      is: 'married',\n      then: Yup.number().positive('Capacity must be a positive number').required('Capacity is required')\n    })\n  });\n\n  // Submit handler\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/owners/register', values);\n      // Handle successful submission (optional: you can add a redirect or other logic)\n    } catch (error) {\n      // Handle errors (optional: log error or add some error handling)\n    }\n    setSubmitting(false);\n  };\n\n  // Next Step Handler\n  const nextStep = () => setStep(prev => Math.min(prev + 1, 2));\n\n  // Previous Step Handler\n  const prevStep = () => setStep(prev => Math.max(prev - 1, 1));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register Marriage Mahal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchemaStep2,\n      onSubmit: handleSubmit,\n      children: ({\n        values,\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Marriage Mahal Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Marital Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              name: \"maritalStatus\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"single\",\n                children: \"Single\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"married\",\n                children: \"Married\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), values.maritalStatus === 'married' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              name: \"mahalName\",\n              type: \"text\",\n              placeholder: \"Marriage Mahal Name\",\n              component: InputField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"mahalLocation\",\n              type: \"text\",\n              placeholder: \"Marriage Mahal Location\",\n              component: InputField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"mahalCapacity\",\n              type: \"number\",\n              placeholder: \"Marriage Mahal Capacity\",\n              component: InputField\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"M88kfgrd7Unvr/hfMAIVxST1ckg=\");\n_c2 = Register;\nexport default Register;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"names":["React","useState","Formik","Field","Form","Yup","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","InputField","field","form","props","children","fileName","_jsxFileName","lineNumber","columnNumber","touched","name","errors","style","color","_c","Register","_s","step","setStep","initialValues","maritalStatus","mahalName","mahalLocation","mahalCapacity","validationSchemaStep2","object","string","when","is","then","required","number","positive","handleSubmit","values","setSubmitting","response","post","error","nextStep","prev","Math","min","prevStep","max","validationSchema","onSubmit","isSubmitting","as","value","type","placeholder","component","disabled","_c2","$RefreshReg$"],"sources":["/home/ubuntu/Git_0201/SolFame/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Formik, Field, Form } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\n// Custom input component\nconst InputField = ({ field, form, ...props }) => {\n  return (\n    <div>\n      <input {...field} {...props} />\n      {form.touched[field.name] && form.errors[field.name] && (\n        <div style={{ color: 'red' }}>{form.errors[field.name]}</div>\n      )}\n    </div>\n  );\n};\n\nconst Register = () => {\n  const [step, setStep] = useState(1);\n\n  // Initial form values\n  const initialValues = {\n    maritalStatus: '',\n    mahalName: '',\n    mahalLocation: '',\n    mahalCapacity: '',\n  };\n\n  // Step 2: Marriage Mahal details validation\n  const validationSchemaStep2 = Yup.object({\n    mahalName: Yup.string().when('maritalStatus', {\n      is: 'married',\n      then: Yup.string().required('Marriage Mahal Name is required'),\n    }),\n    mahalLocation: Yup.string().when('maritalStatus', {\n      is: 'married',\n      then: Yup.string().required('Marriage Mahal Location is required'),\n    }),\n    mahalCapacity: Yup.number()\n      .when('maritalStatus', {\n        is: 'married',\n        then: Yup.number().positive('Capacity must be a positive number').required('Capacity is required'),\n      }),\n  });\n\n  // Submit handler\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/owners/register', values);\n      // Handle successful submission (optional: you can add a redirect or other logic)\n    } catch (error) {\n      // Handle errors (optional: log error or add some error handling)\n    }\n    setSubmitting(false);\n  };\n\n  // Next Step Handler\n  const nextStep = () => setStep((prev) => Math.min(prev + 1, 2));\n\n  // Previous Step Handler\n  const prevStep = () => setStep((prev) => Math.max(prev - 1, 1));\n\n  return (\n    <div>\n      <h2>Register Marriage Mahal</h2>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchemaStep2}\n        onSubmit={handleSubmit}\n      >\n        {({ values, isSubmitting }) => (\n          <Form>\n            {/* Step 2: Marriage Mahal Info */}\n            {step === 1 && (\n              <div>\n                <h3>Marriage Mahal Information</h3>\n                <div>\n                  <label>Marital Status</label>\n                  <Field as=\"select\" name=\"maritalStatus\">\n                    <option value=\"\">Select Status</option>\n                    <option value=\"single\">Single</option>\n                    <option value=\"married\">Married</option>\n                  </Field>\n                </div>\n\n                {values.maritalStatus === 'married' && (\n                  <>\n                    <Field\n                      name=\"mahalName\"\n                      type=\"text\"\n                      placeholder=\"Marriage Mahal Name\"\n                      component={InputField}\n                    />\n                    <Field\n                      name=\"mahalLocation\"\n                      type=\"text\"\n                      placeholder=\"Marriage Mahal Location\"\n                      component={InputField}\n                    />\n                    <Field\n                      name=\"mahalCapacity\"\n                      type=\"number\"\n                      placeholder=\"Marriage Mahal Capacity\"\n                      component={InputField}\n                    />\n                  </>\n                )}\n\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n              </div>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,KAAK,EAAEC,IAAI,QAAQ,QAAQ;AAC5C,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAE,GAAGC;AAAM,CAAC,KAAK;EAChD,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAA,GAAWI,KAAK;MAAA,GAAME;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC9BN,IAAI,CAACO,OAAO,CAACR,KAAK,CAACS,IAAI,CAAC,IAAIR,IAAI,CAACS,MAAM,CAACV,KAAK,CAACS,IAAI,CAAC,iBAClDb,OAAA;MAAKe,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEF,IAAI,CAACS,MAAM,CAACV,KAAK,CAACS,IAAI;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAC7D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACM,EAAA,GATId,UAAU;AAWhB,MAAMe,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;;EAEnC;EACA,MAAM6B,aAAa,GAAG;IACpBC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE;EACjB,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAG9B,GAAG,CAAC+B,MAAM,CAAC;IACvCJ,SAAS,EAAE3B,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,eAAe,EAAE;MAC5CC,EAAE,EAAE,SAAS;MACbC,IAAI,EAAEnC,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACI,QAAQ,CAAC,iCAAiC;IAC/D,CAAC,CAAC;IACFR,aAAa,EAAE5B,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,eAAe,EAAE;MAChDC,EAAE,EAAE,SAAS;MACbC,IAAI,EAAEnC,GAAG,CAACgC,MAAM,CAAC,CAAC,CAACI,QAAQ,CAAC,qCAAqC;IACnE,CAAC,CAAC;IACFP,aAAa,EAAE7B,GAAG,CAACqC,MAAM,CAAC,CAAC,CACxBJ,IAAI,CAAC,eAAe,EAAE;MACrBC,EAAE,EAAE,SAAS;MACbC,IAAI,EAAEnC,GAAG,CAACqC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,oCAAoC,CAAC,CAACF,QAAQ,CAAC,sBAAsB;IACnG,CAAC;EACL,CAAC,CAAC;;EAEF;EACA,MAAMG,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAE;IAAEC;EAAc,CAAC,KAAK;IACxD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzC,KAAK,CAAC0C,IAAI,CAAC,2CAA2C,EAAEH,MAAM,CAAC;MACtF;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;IAAA;IAEFH,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAGA,CAAA,KAAMrB,OAAO,CAAEsB,IAAI,IAAKC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAMG,QAAQ,GAAGA,CAAA,KAAMzB,OAAO,CAAEsB,IAAI,IAAKC,IAAI,CAACG,GAAG,CAACJ,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;EAE/D,oBACE3C,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCX,OAAA,CAACN,MAAM;MACL4B,aAAa,EAAEA,aAAc;MAC7B0B,gBAAgB,EAAErB,qBAAsB;MACxCsB,QAAQ,EAAEb,YAAa;MAAA7B,QAAA,EAEtBA,CAAC;QAAE8B,MAAM;QAAEa;MAAa,CAAC,kBACxBlD,OAAA,CAACJ,IAAI;QAAAW,QAAA,EAEFa,IAAI,KAAK,CAAC,iBACTpB,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAAO,QAAA,EAAI;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCX,OAAA;YAAAO,QAAA,gBACEP,OAAA;cAAAO,QAAA,EAAO;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7BX,OAAA,CAACL,KAAK;cAACwD,EAAE,EAAC,QAAQ;cAACtC,IAAI,EAAC,eAAe;cAAAN,QAAA,gBACrCP,OAAA;gBAAQoD,KAAK,EAAC,EAAE;gBAAA7C,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvCX,OAAA;gBAAQoD,KAAK,EAAC,QAAQ;gBAAA7C,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtCX,OAAA;gBAAQoD,KAAK,EAAC,SAAS;gBAAA7C,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EAEL0B,MAAM,CAACd,aAAa,KAAK,SAAS,iBACjCvB,OAAA,CAAAE,SAAA;YAAAK,QAAA,gBACEP,OAAA,CAACL,KAAK;cACJkB,IAAI,EAAC,WAAW;cAChBwC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,qBAAqB;cACjCC,SAAS,EAAEpD;YAAW;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFX,OAAA,CAACL,KAAK;cACJkB,IAAI,EAAC,eAAe;cACpBwC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,yBAAyB;cACrCC,SAAS,EAAEpD;YAAW;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFX,OAAA,CAACL,KAAK;cACJkB,IAAI,EAAC,eAAe;cACpBwC,IAAI,EAAC,QAAQ;cACbC,WAAW,EAAC,yBAAyB;cACrCC,SAAS,EAAEpD;YAAW;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA,eACF,CACH,eAEDX,OAAA;YAAQqD,IAAI,EAAC,QAAQ;YAACG,QAAQ,EAAEN,YAAa;YAAA3C,QAAA,EAAC;UAE9C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACQ,EAAA,CAtGID,QAAQ;AAAAuC,GAAA,GAARvC,QAAQ;AAwGd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAAzC,EAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}